name: release-action-template

on:
  pull_request:
    types: [closed]
    branches:
      - main

jobs:
  update_release_note:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout PR branch
        uses: actions/checkout@v2

      - name: Display source branch
        run: echo "PR source branch is ${{ github.event.pull_request.head.ref }}"

      - name: Set branch name as variable
        run: echo "BRANCH_NAME=${{ github.event.pull_request.head.ref }}" >> $GITHUB_ENV

      # - name: Mapping variables branch to semantic version
      #   uses: kanga333/variable-mapper@master
      #   id: export
      #   with:
      #     key: "branch"
      #     map: |
      #       {
      #         "branch": {
      #           "release": "MAJOR",
      #           "feature": "MINOR",
      #           "hotfix": "MINOR",
      #           "patch": "PATCH"
      #         }
      #       }
      #     export_to: env
      #     mode: overwrite

      # ${{ env.${{ env.VERSION_TYPE }} }}
      - name: Set version type
        run: echo "VERSION_TYPE=$(echo ${{ env.BRANCH_NAME }} | cut -d'/' -f1)" >> $GITHUB_ENV

      - name: Set Incremental variable
        run: |
          if [ "${{ env.VERSION_TYPE }}" == "release" ]; then
            INCREMENTAL_TYPE="MAJOR"
          elif [ "${{ env.VERSION_TYPE }}" == "feature" ]; then
            INCREMENTAL_TYPE="MINOR"
          elif [ "${{ env.VERSION_TYPE }}" == "hotfix" ]; then
            INCREMENTAL_TYPE="MINOR"
          elif [ "${{ env.VERSION_TYPE }}" == "patch" ]; then
            INCREMENTAL_TYPE="PATCH"
          else
            INCREMENTAL_TYPE="PATCH"
          fi
          echo "INCREMENTAL_TYPE=$INCREMENTAL_TYPE" >> $GITHUB_ENV

      - name: Get Current Release
        id: get_current_release
        uses: joutvhu/get-release@v1
        with:
          latest: true
          # Tag name start with `v`
          pattern: '^v.*'
          # Including pre-release
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_ACCESS_TOKEN }}

      - name: Set tag name, prerelease version
        run: |
          # Remove 'v' from tag name
          echo "TAG_NAME=$(echo "${{ steps.get_current_release.outputs.tag_name }}" | sed 's/^v//')" >> $GITHUB_ENV
          echo "Current tag name is ${TAG_NAME}"

          # Set prerelease value
          if [ "${{ steps.get_current_release.outputs.prerelease }}" == "false" ]; then
            echo "PRERELEASE="REMOVE"" >> $GITHUB_ENV
          else
            echo "PRERELEASE="${{ steps.get_current_release.outputs.prerelease }}"" >> $GITHUB_ENV
          fi
          echo "Prerelease is ${PRERELEASE}"

      #https://github.com/marketplace/actions/update-semantic-version
      - name: Set new semantic version
        id: new_version
        uses: cookbenjamin/update-version@v1.0.1
        with:
          current-version: '${{ env.TAG_NAME }}' #vX.Y.Z
          increment-version-fragment: '${{ env.INCREMENTAL_TYPE }}'
          prerelease-fragment: '${{ env.PRERELEASE }}'
        #${{ steps.new_version.outputs.updated-version }}

      - name: Create release
        uses: actions/create-release@v1
        env:
            GIT_ACCESS_TOKEN: ${{ secrets.GIT_ACCESS_TOKEN }}
        with:
            tag_name: '${{ steps.new_version.outputs.updated-version }}'
            release_name: '${{ steps.new_version.outputs.updated-version }}'
            body: ${{ github.event.pull_request.body }}
      # - name: Generate release note
      #   id: release_note
      #   uses: release-drafter/release-drafter@v5
      #   with:
      #    confit-name: release-config.yml
      #    disable-autolabeler: true
      #   env:
      #     GIT_ACCESS_TOKEN: ${{ secrets.GIT_ACCESS_TOKEN }}
